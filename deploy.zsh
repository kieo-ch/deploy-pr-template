#!/bin/zsh

set -e

# Check for required tools
if ! command -v gh &> /dev/null; then
  echo "Error: GitHub CLI (gh) is not installed. Please install it and authenticate."
  exit 1
fi

if ! command -v yq &> /dev/null; then
  echo "Error: yq (YAML processor) is not installed. Please install it."
  exit 1
fi

# Variables
REPOS_FILE="repos.yaml"
PR_TEMPLATE="template.md"
TEMP_DIR=$(mktemp -d)
BRANCH_NAME="chore/update-pr-template"
COMMIT_MESSAGE="Update PR template"
PR_BODY="This PR updates the pull request template. Note that this PR is generated by a script."
PR_URLS=()

# Define colour codes for better output readability
GREEN="\033[0;32m"
YELLOW="\033[0;33m"
RED="\033[0;31m"
NC="\033[0m" # No Colour

# Ensure required files exist
if [[ ! -f "$REPOS_FILE" ]]; then
  echo "Error: $REPOS_FILE not found."
  exit 1
fi

if [[ ! -f "$PR_TEMPLATE" ]]; then
  echo "Error: $PR_TEMPLATE not found."
  exit 1
fi

# Store the absolute path of the PR template file
PR_TEMPLATE_PATH=$(realpath "$PR_TEMPLATE")

# Read repositories from repos.yaml
REPOS=($(yq eval '.repositories[]' "$REPOS_FILE" | sed 's|^|git@github.com:|' | sed 's|$|.git|'))

# Add a counter to track progress
TOTAL_REPOS=${#REPOS[@]}
COUNT=0

# Process each repository
for REPO in $REPOS; do
  COUNT=$((COUNT + 1))
  PREFIX="[${COUNT}/${TOTAL_REPOS}]"
  echo -e "${YELLOW}${PREFIX} Processing repository:${NC} $REPO"

  # Clone the repository
  REPO_DIR="$TEMP_DIR/$(basename "$REPO")"
  echo -e "${YELLOW}${PREFIX} Cloning repository...${NC}"
  git clone "$REPO" "$REPO_DIR" --quiet || { echo -e "${RED}${PREFIX} Failed to clone $REPO${NC}"; continue; }

  # Navigate to the repository directory
  cd "$REPO_DIR"

  # Create a new branch
  echo -e "${YELLOW}${PREFIX} Creating branch $BRANCH_NAME...${NC}"
  git checkout -b "$BRANCH_NAME" --quiet || { echo -e "${RED}${PREFIX} Failed to create branch in $REPO${NC}"; continue; }

  # Add/replace the PR template
  echo -e "${YELLOW}${PREFIX} Updating PR template...${NC}"
  mkdir -p .github
  cp "$PR_TEMPLATE_PATH" .github/pull_request_template.md

  # Commit the changes
  echo -e "${YELLOW}${PREFIX} Committing changes...${NC}"
  git add .github/pull_request_template.md
  git commit -m "$COMMIT_MESSAGE" --quiet || { echo -e "${RED}${PREFIX} Failed to commit changes in $REPO${NC}"; continue; }

  # Push the branch
  echo -e "${YELLOW}${PREFIX} Pushing branch $BRANCH_NAME...${NC}"
  git push -u origin "$BRANCH_NAME" --quiet &>/dev/null || { echo -e "${RED}${PREFIX} Failed to push branch in $REPO${NC}"; continue; }

  # Determine the default branch name
  BASE_BRANCH=$(git remote show origin | awk '/HEAD branch/ {print $NF}')

  # Create a pull request
  echo -e "${YELLOW}${PREFIX} Creating pull request...${NC}"
  PR_URL=$(gh pr create --title "$COMMIT_MESSAGE" --body "$PR_BODY" --base "$BASE_BRANCH" --head "$BRANCH_NAME") || { echo -e "${RED}${PREFIX} Failed to create PR for $REPO${NC}"; continue; }
  PR_URLS+=("$PR_URL")

  # Navigate back to the temp directory
  cd "$TEMP_DIR"

  echo -e "${YELLOW}${PREFIX} Pull request created:${NC} $PR_URL"
done

# Clean up
echo "Cleaning up temporary files..."
rm -rf "$TEMP_DIR"

# Output all PR URLs with colours
echo -e "\n${GREEN}All pull requests created:${NC}"
printf "- %s\n" "${PR_URLS[@]}"
